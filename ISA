

* len (unsigned), ofs (signed), uofs (unsigned), val (signed), uval (unsigned)

 5 (1)  : 0 0 0 n n n n n
13 (2)  : 0 0 1 n n n n n . n n n n n n n n
21 (3)  : 0 1 0 n n n n n . n n n n n n n n . n n n n n n n n
29 (4)  : 0 1 1 n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
37 (5)  : 1 0 0 n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
45 (6)  : 1 0 1 n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
53 (7)  : 1 1 0 n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
64 (9)  : 1 1 1 x x x x x . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n

nnn..n is big-endian

* str

len+data (data is null-terminated)

* base+ofs (signed)

 3 (1)  : 0 0 0 b b n n n
11 (2)  : 0 0 1 b b n n n . n n n n n n n n
19 (3)  : 0 1 0 b b n n n . n n n n n n n n . n n n n n n n n
27 (4)  : 0 1 1 b b n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
35 (5)  : 1 0 0 b b n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
43 (6)  : 1 0 1 b b n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
51 (7)  : 1 1 0 b b n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n
64 (9)  : 1 1 1 b b x x x . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n . n n n n n n n n

bb
00 sp
01 bp
10 ap
11 ...	(requires bits 7..5 to be 0)
   	ofs
	0	dst

nnn..n is big-endian

* opcode

00     noop

01     stack_free	n:len

02     stack_alloc	n:len

03     stack_free_alloc	nfree:len nalloc:len

04     stack_clear	n:len

05     inst_assign	dst:base+ofs src:base+ofs

06     stack_push	src:base+ofs

10     method_callc	dst:base+ofs sel:str sel_hash:uint32 argc:len

11     ret

12     retd		# Return default, assign &argv[0] to dst and return

20     except_push	var:base+ofs

21     except_raise	inst:base+ofs

22     except_reraise

23     except_pop

24     except_popn	n:len

30     jf 		ofs:ofs

31     jt		ofs:ofs

32     iff		ofs:ofs

33     ift		ofs:ofs

34     jx		ofs:ofs

35     jmp		ofs:ofs

40     env_atc  	dst:base+ofs name:str name_hash:uint32

41     env_atc_push	name:str name_hash:uint32

50     nil_new		dst:base+ofs

51     nil_push

52,53  bool_newc	dst:base+ofs

54,55  bool_pushc

56     int_newc		dst:base+ofs val:val

57     int_pushc	val:val

58     float_newc	dst:base+ofs val:str

59     float_pushc	val:str

5a     method_newc	dst:base+ofs addr:ofs

5b     method_pushc	addr:ofs

5c     str_newc		dst:base+ofs str:str

5d     str_pushc	str:str

5e     str_newc_hash	dst:base+ofs str:str str_hash:uint32

5f     str_pushc_hash	str:str str_hash:uint32

70     argc_chk		n:uval

71     array_arg_push	min:uval

80     debug		len:uint8 ...
